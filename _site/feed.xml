<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-06-02T08:00:45-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Sam Dawley</title><subtitle>Personal Site</subtitle><author><name>Sam Dawley</name></author><entry><title type="html">Bayesian Statistical Learning Model</title><link href="http://localhost:4000/year-archive/2022-08-01-bayesian/" rel="alternate" type="text/html" title="Bayesian Statistical Learning Model" /><published>2022-08-01T00:00:00-07:00</published><updated>2022-08-01T00:00:00-07:00</updated><id>http://localhost:4000/year-archive/bayesian</id><content type="html" xml:base="http://localhost:4000/year-archive/2022-08-01-bayesian/">&lt;p&gt;[&lt;a href=&quot;https://github.com/ofw24/friendly-potato/blob/main/Final%20Report.pdf&quot;&gt;Report&lt;/a&gt;, &lt;a href=&quot;https://github.com/ofw24/friendly-potato&quot;&gt;GitHub&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;During my Senior year of college I took a class on Bayesian statistics. While incredibly interesting and informative, it was a lot of work. Nonetheless, I learned a lot! Much of the work was focused on computational statisticals, including generalized linear models, hierarchical modeling, and gaussian processes, as well as sampling algorithms, such as Metropolis-Hastings and Gibbs sampling. The final project for the course involved creating a Bayesian statistical model for analyzing real-world data. My partner and I focused on building a model for predicting life expectancies based on a paper from Raftery, et al. The full and associated code can be found above.&lt;/p&gt;

&lt;p&gt;Whether it be the algorithm we created or simply the dimension of the data, the sampling algorithm we tried to run took ages. Hence, a significant amount of random sampling was done using supercomputing clusters provided by Hopkins. That is, I’d suggest not running this code on your desktop unless you have three hours to kill and a very powerful fan.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Adrian E. Raftery, Jennifer L. Chunn, Patrick Gerland &amp;amp; Hana Ševčíková (2013). Bayesian probabilistic projections of life expectancy for all countries. &lt;em&gt;Demography&lt;/em&gt;. 50:3, 777-801. DOI: 10.1007/s13524-012-0193-x.&lt;/p&gt;</content><author><name>Sam Dawley</name></author><summary type="html">A stochastic model for predicting life expectancies.</summary></entry><entry><title type="html">Machine Learning Applications in Cancer Classification</title><link href="http://localhost:4000/year-archive/cmm_proj/" rel="alternate" type="text/html" title="Machine Learning Applications in Cancer Classification" /><published>2022-05-01T00:00:00-07:00</published><updated>2022-05-01T00:00:00-07:00</updated><id>http://localhost:4000/year-archive/cmm_proj</id><content type="html" xml:base="http://localhost:4000/year-archive/cmm_proj/">&lt;p&gt;[&lt;a href=&quot;https://github.com/sdawley1/ML-Cancer-Classification/blob/main/CMM%20Final%20Report.pdf&quot;&gt;Report&lt;/a&gt;, &lt;a href=&quot;https://github.com/sdawley1/ML-Cancer-Classification&quot;&gt;GitHub&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Another&lt;/em&gt; amazing class I took at JHU (there were a few) was Computational Molecular Medicine, a course focused on the applications of information theory and statistical learning to cancer classification. I was assigned the problem of classifying cancers as either of acute myeloid leukemia (AML) or acute lymphoblastic leukemia (ALL), using gene expression data. The project was based on research done by Golub, et al. (1999) which tackled the exact same problem. The dataset can be found on &lt;a href=&quot;https://www.kaggle.com/datasets/crawford/gene-expression&quot;&gt;kaggle&lt;/a&gt;. My final report and associated code for the class is linked in the github repo above.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Golub, T R et al. (1999). Molecular classification of cancer: class discovery and class prediction by gene expression monitoring. &lt;em&gt;Science&lt;/em&gt;, 286:5439, 531-7. DOI: 10.1126/science.286.5439.531&lt;/p&gt;

&lt;div class=&quot;centerfig&quot;&gt;
  &lt;figure&gt;
    &lt;img src=&quot;../../files/Decision Boundaries.png&quot; alt=&quot;Decision Boundaries&quot; style=&quot;float: center; width: 500px;&quot; /&gt;
    &lt;div class=&quot;centercaption&quot; style=&quot;width: 500px&quot;&gt;&lt;em&gt;
    Performance of different machine learning models. Moving clockwise from the top left, a random forest classifier, a k-nearest neighbor classifier, quadratic discriminant analysis (QDA), and a support vector machine (SVC).
    &lt;/em&gt;&lt;/div&gt;
  &lt;/figure&gt;
&lt;/div&gt;</content><author><name>Sam Dawley</name></author><summary type="html">A project as part of a class I took to build a machine learning model for cancer classification.</summary></entry><entry><title type="html">Aerodynamics in Julia</title><link href="http://localhost:4000/year-archive/2022-01-01-aero_julia/" rel="alternate" type="text/html" title="Aerodynamics in Julia" /><published>2022-01-01T00:00:00-08:00</published><updated>2022-01-01T00:00:00-08:00</updated><id>http://localhost:4000/year-archive/aero_julia</id><content type="html" xml:base="http://localhost:4000/year-archive/2022-01-01-aero_julia/">&lt;p&gt;[&lt;a href=&quot;https://github.com/sdawley1/aero-julia&quot;&gt;GitHub&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;I’m always trying to learn new programming languages (I think I’m gonna go for C++ next) and so when I saw a set of Jupyter notebooks for learning aerodynamics, written in Python, I figured I could do a better job at creating the visuals in those notebooks while learning another language in the process. Granted, that other language is practically a twin of Python. Nonetheless, it was fun! I still need to finish writing the rest of the notebooks, only about half are converted to Julia from the original source.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Barba, Lorena A., Mesnard, Olivier (2019). Aero Python: classical aerodynamics of potential flow using Python. &lt;em&gt;Journal of Open Source Education&lt;/em&gt;, 2(15), 45, https://doi.org/10.21105/jose.00045.&lt;/p&gt;

&lt;div class=&quot;centerfig&quot;&gt;
  &lt;figure&gt;
    &lt;!-- MAKE SURE IMAGE AND CAPTION HAVE THE SAME WIDTH --&gt;
    &lt;img src=&quot;../../files/source_sink_pairs.png&quot; alt=&quot;Source-Sink Pairs&quot; style=&quot;float: center; width: 500px;&quot; /&gt;
    &lt;div class=&quot;centercaption&quot; style=&quot;width: 500px&quot;&gt;&lt;em&gt; 
    The velocity vector field(s) which result from different combinations of source-sink pairs. This image is produced in the first of the series of Jupyter notebooks in the linked Github repo.
    &lt;/em&gt;&lt;/div&gt;
  &lt;/figure&gt;
&lt;/div&gt;</content><author><name>Sam Dawley</name></author><summary type="html">Some introductory notebooks to aerodynamics, written in Julia.</summary></entry><entry><title type="html">Intro to Probability Notes</title><link href="http://localhost:4000/year-archive/2021-01-01-prob_notes/" rel="alternate" type="text/html" title="Intro to Probability Notes" /><published>2021-08-01T00:00:00-07:00</published><updated>2021-08-01T00:00:00-07:00</updated><id>http://localhost:4000/year-archive/prob_notes</id><content type="html" xml:base="http://localhost:4000/year-archive/2021-01-01-prob_notes/">&lt;p&gt;[&lt;a href=&quot;../../files/Intro%20Prob%20Notes.pdf&quot;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;My second favorite class I took while in college was probably Introduction to Probability, not because it was fun, it certainly was not. That said, the professor, Dr. Torcaso, is incredible and I hope that he lives forever and continues to teach the entire time because his class is incredible. Also, Intro Prob is probably the most applicable class I’ve ever taken, as I find myself using probability and statistics constantly in different projects I take on, so having a great understanding of prob is very beneficial. Similar to Pchem, I collected all of my notes in a nice pdf using LaTeX, linked above. I’ve found that compilign up all of my stuff in LaTeX is a great study tool, as writing in a way that I’m trying to write a textbook really forces understanding.&lt;/p&gt;</content><author><name>Sam Dawley</name></author><summary type="html">An odyssey through my experience taking an intro course in probability theory.</summary></entry><entry><title type="html">Chemical and Materials Science Data Analysis Tools</title><link href="http://localhost:4000/year-archive/2021-08-01-data_science_notebooks/" rel="alternate" type="text/html" title="Chemical and Materials Science Data Analysis Tools" /><published>2021-08-01T00:00:00-07:00</published><updated>2021-08-01T00:00:00-07:00</updated><id>http://localhost:4000/year-archive/data_science_notebooks</id><content type="html" xml:base="http://localhost:4000/year-archive/2021-08-01-data_science_notebooks/">&lt;p&gt;I took a data science class one semester and coded a few tools for analyzing chemical and materials data. Below are some of those notebooks, mainly my favorites. These are also interesting because it was at the time I was just learning Python, so some of the code/algorithms are funny to read.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://nbviewer.org/github/sdawley1/UV-Vis-Curve-Fitting/blob/main/sdawley1_hw5.ipynb&quot;&gt;UV/Vis Curve Fitting&lt;/a&gt;&lt;/strong&gt;
  is a python notebook that analyzes absorption data collected from samples containing unknown proportions of vesicles, miscelles, and water. The ultimate goal is to determine the proportion of vesicles, miscelles, water in each sample using curve fitting and some methods from optimization. The corresponding github repo links to a JACS paper which the code is based on.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://nbviewer.org/github/sdawley1/Sunscreen-Visualization/blob/main/sdawley1_hw7.ipynb&quot;&gt;Sunscreen Visualization&lt;/a&gt;&lt;/strong&gt;
  contains a ton of different sunscreens which were tested for efficacy. Interestingly, the data presented here was collected by a class of first-year undergraduates, hence the reason some of the absorption spectra are more realistic than others.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://nbviewer.org/github/sdawley1/Heat-Capacity-Modeling/blob/main/sdawley1_hw6.ipynb&quot;&gt;Heat Capacity Modeling&lt;/a&gt;&lt;/strong&gt;
  It’s been said that if there was matter so rare we could only make a single measurement on it, that measurement should be the heat capacity. There are two competing methods of heat capacity modeling, the Debye model and the Einstein model. While different, both models estimate specific situations very well, and therefore it is common to fit heat capacity data to a linear combination of the models.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://nbviewer.org/github/sdawley1/Kinetic-Equilibrium-Model/blob/main/sdawley1_hw4.ipynb&quot;&gt;Kinetic Equilibrium Modeling&lt;/a&gt;&lt;/strong&gt;
  Chemical kinetics is great for determining how long a reaction will take, unlike thermodynamics which tells us only about how favorable a reaction is. This notebook models equilibrium concentrations of the Haber-Bosch process, the process responsible for artificial nitrogen fixation. The main process involves establishing and solving an initial value problem, with known rate constants and initial concentrations.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sam Dawley</name></author><summary type="html">Some data science projects I did for a class.</summary></entry><entry><title type="html">Physical Chemistry Notes</title><link href="http://localhost:4000/year-archive/2021-08-01-pchem_notes" rel="alternate" type="text/html" title="Physical Chemistry Notes" /><published>2021-08-01T00:00:00-07:00</published><updated>2021-08-01T00:00:00-07:00</updated><id>http://localhost:4000/year-archive/pchem_notes</id><content type="html" xml:base="http://localhost:4000/year-archive/2021-08-01-pchem_notes">&lt;p&gt;[&lt;a href=&quot;../../files/Pchem%20Book.pdf&quot;&gt;PDF&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;My favorite class I took while in college was probably Pchem I, covering thermodynamics and kinetics. That’s not to say it wasn’t hard, this class was during the same semester I became addicted to coffee and lost the most sleep. Nonetheless, I curated all of my notes from the class and collected them in a nice pdf using LaTeX.&lt;/p&gt;

&lt;p&gt;I continued this exercise into Pchem II, quantum mechanics with a focus on spectroscopy, adding all of the notes together to create one big document.&lt;/p&gt;

&lt;p&gt;Depending on how things go, one day I’d like to make it more uniform and readable and convert it to a refined text. Though, it’s certainly not my top priority for the time being. The full document is linked above, and individual chapters (whenever I get around to making them) are here:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Chapter 1 -&lt;/li&gt;
  &lt;li&gt;Chapter 2 -&lt;/li&gt;
  &lt;li&gt;Chapter 3 -&lt;/li&gt;
  &lt;li&gt;etc.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Sam Dawley</name></author><summary type="html">An odyssey through my first experience taking physical chemistry.</summary></entry></feed>